import SERVER_CONST from "./const/server.json";
import FRONTEND_CONST from "./const/frontend.json";
import PATTERN from "./const/pattern.json";
import ERR_RES from "./const/errRes.json";

export default genFRONTEND_CONFIG(
  FRONTEND_CONST,
  SERVER_CONST,
  PATTERN,
  ERR_RES
);

function genFRONTEND_CONFIG(FRONTEND_CONST, SERVER_CONST, PATTERN, ERR_RES) {
  // NAVBAR
  FRONTEND_CONST.NAVBAR = {
    NEWS: {
      STATUS: {
        FIRST: SERVER_CONST.NEWS.FRONT_END_STATUS.FIRST,
        AGAIN: SERVER_CONST.NEWS.FRONT_END_STATUS.AGAIN,
        CHECK: SERVER_CONST.NEWS.FRONT_END_STATUS.CHECK,
      },
      LIMIT: SERVER_CONST.QUERY_NEWS.LIMIT,
      TIME_FORMAT: SERVER_CONST.NEWS.TIME_FORMAT,
    },
  };
  // SQUARE
  FRONTEND_CONST.SQUARE.PAGINATION = {
    BLOG_COUNT: SERVER_CONST.SQUARE.PAGINATION.BLOG_COUNT,
    PAGE_COUNT: SERVER_CONST.SQUARE.PAGINATION.PAGE_COUNT,
  };
  FRONTEND_CONST.SQUARE.DATASET.VALUE.BLOG_STATUS_PUBLIC =
    SERVER_CONST.BLOG.STATUS.PUBLIC;
  // USER
  FRONTEND_CONST.USER.DATASET.VALUE.BLOG_STATUS_PUBLIC =
    SERVER_CONST.BLOG.STATUS.PUBLIC;
  FRONTEND_CONST.USER.PAGINATION = {
    BLOG_COUNT: SERVER_CONST.BLOG.PAGINATION.BLOG_COUNT,
    PAGE_COUNT: SERVER_CONST.BLOG.PAGINATION.PAGE_COUNT,
  };
  // BLOG
  FRONTEND_CONST.BLOG.REG = {
    BLOG_CONTENT_TRIM: /(<p><br><\/p>)|(<p>[\s&nbsp;]+<\/p>)/g,
    X_IMG_PARSE_TO_IMG: new RegExp(PATTERN.X_IMG_PARSE_TO_IMG, "g"),
  };
  // BLOG_EDIT
  FRONTEND_CONST.BLOG_EDIT.REG = {
    IMG_ALT_ID: /alt_id=(?<alt_id>\w+)/,
    IMG_NAME_AND_EXT: /^(.+?)\.(.+?)$/,
    X_IMG_PARSE_TO_IMG: new RegExp(PATTERN.X_IMG_PARSE_TO_IMG, "g"),
    IMG_PARSE_TO_X_IMG: new RegExp(PATTERN.IMG_PARSE_TO_X_IMG, "g"),
  };
  FRONTEND_CONST.BLOG_EDIT.EDITOR = {
    TITLE_MAX_LENGTH: SERVER_CONST.BLOG.EDITOR.TITLE_MAX_LENGTH,
    TITLE_MIN_LENGTH: SERVER_CONST.BLOG.EDITOR.TITLE_MIN_LENGTH,
    // 單位byte
    IMG_MAX_SIZE: SERVER_CONST.BLOG.EDITOR.IMG_MAX_SIZE,
    HTML_MAX_LENGTH: SERVER_CONST.BLOG.EDITOR.HTML_MAX_LENGTH,
    HTML_MIN_LENGTH: SERVER_CONST.BLOG.EDITOR.HTML_MIN_LENGTH,
  };
  //  ALBUM_LIST
  FRONTEND_CONST.ALBUM_LIST.PAGINATION = {
    BLOG_COUNT: SERVER_CONST.ALBUM_LIST.PAGINATION.BLOG_COUNT,
    PAGE_COUNT: SERVER_CONST.ALBUM_LIST.PAGINATION.PAGE_COUNT,
  };
  FRONTEND_CONST.ALBUM_LIST.DATASET.VALUE.BLOG_STATUS_PUBLIC =
    SERVER_CONST.BLOG.STATUS.PUBLIC;
  FRONTEND_CONST.ALBUM.ALT = {
    MIN_LENGTH: SERVER_CONST.BLOG.EDITOR.IMG_ALT_MIN_LENGTH,
    MAX_LENGTH: SERVER_CONST.BLOG.EDITOR.IMG_ALT_MAX_LENGTH,
  };
  // SETTING
  FRONTEND_CONST.SETTING.REG = {
    AVATAR_EXT: /\.(?<ext>\w+)\b/,
  };
  FRONTEND_CONST.SETTING.EMAIL = {
    MIN_LENGTH: SERVER_CONST.USER.EMAIL.MIN_LENGTH,
  };
  FRONTEND_CONST.SETTING.NICKNAME = {
    MIN_LENGTH: SERVER_CONST.USER.NICKNAME.MIN_LENGTH,
    MAX_LENGTH: SERVER_CONST.USER.NICKNAME.MAX_LENGTH,
  };
  FRONTEND_CONST.SETTING.PASSWORD = {
    MIN_LENGTH: SERVER_CONST.USER.PASSWORD.MIN_LENGTH,
    MAX_LENGTH: SERVER_CONST.USER.PASSWORD.MAX_LENGTH,
  };
  FRONTEND_CONST.SETTING.AGE = {
    MINIMUM: SERVER_CONST.USER.AGE.MINIMUM,
    MAXIMUM: SERVER_CONST.USER.AGE.MAXIMUM,
  };
  FRONTEND_CONST.SETTING.AVATAR = {
    URL: SERVER_CONST.USER.AVATAR.URL,
    EXT: SERVER_CONST.USER.AVATAR.EXT,
    //MAX_SIZE:  "單位byte",
    MAX_SIZE: SERVER_CONST.USER.AVATAR.MAX_SIZE,
  };
  // REDIR
  FRONTEND_CONST.REDIR = {
    FROM: SERVER_CONST.UTILS.REDIR_FROM,
  };
  // _AXIOS
  FRONTEND_CONST._AXIOS = {
    ERR_RES: {
      NEWS_NO_LOGIN: ERR_RES.NEWS.READ.NO_LOGIN,
      NO_LOGIN: ERR_RES.SERVER.RESPONSE.NO_LOGIN,
    },
  };

  // FRONTEND_CONST.INIT_EJS = {
  //   ALBUM_LIST: {
  //     PAGINATION: {
  //       BLOG_COUNT: SERVER_CONST.ALBUM_LIST.PAGINATION.BLOG_COUNT,
  //       PAGE_COUNT: SERVER_CONST.ALBUM_LIST.PAGINATION.PAGE_COUNT,
  //     },
  //   },
  // };
  return FRONTEND_CONST;
}
